<!DOCTYPE html>
<html lang="en">
  <head><%- include('../partials/head'); %>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
  </head>
  <body class="container text-center">
    <div class="row">
      <div class="col-4" style="background-color: red;">
        <div class="row" style="background-color: green; height: 30%;">
          <div class="row">
            <div class="col-4">Nhietdo</div>
            <div class="col-8">35*C</div>
          </div>
          <div class="row">
            <div class="col-4">Doam</div>
            <div class="col-8">50%</div>
          </div>
        </div>
        <div class="row" style="background-color: blue; height: 70%;">
        </div>
      </div>
      <div class="col-8">
        <div id="chartContainer" style="height: 250px; width: 100%;"></div>
        <div id="chartContaine1" style="height: 250px; width: 100%;"></div>
            <span id="timeToRender"></span>
      </div>
      
    </div>
    <div class="row" style="background-color: yellowgreen;">
      <table class="table table-striped table-bordered">
        <thead>
          <tr>
            <th scope="col-3">#</th>
            <th scope="col-3">First</th>
            <th scope="col-3">Last</th>
            <th scope="col-3">Handle</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th scope="row">1</th>
            <td>Mark</td>
            <td>Otto</td>
            <td>@mdo</td>
          </tr>
          <tr>
            <th scope="row">2</th>
            <td>Jacob</td>
            <td>Thornton</td>
            <td>@fat</td>
          </tr>
          <tr>
            <th scope="row">3</th>
            <td colspan="2">Larry the Bird</td>
            <td>
                <div class="form-check form-switch form-check-reverse">
                    <input class="form-check-input" type="checkbox" value="" id="reverseCheck1">
                    <label class="form-check-label" for="reverseCheck1">
                      Reverse checkbox
                    </label>
                  </div>
            </td>
          </tr>
        </tbody>
        </table>
    </div>
    <script>
      window.onload = function () {

var limit = 50000;
var y = 100;    
var data = [];
var dataSeries = { type: "line" };
var dataPoints = [];
for (var i = 0; i < limit; i += 1) {
	y += Math.round(Math.random() * 10 - 5);
	dataPoints.push({
		x: i,
		y: y
	});
}
dataSeries.dataPoints = dataPoints;
data.push(dataSeries);

//Better to construct options first and then pass it as a parameter
var options = {
	zoomEnabled: true,
	animationEnabled: true,
	title: {
		text: "Try Zooming - Panning"
	},
	axisY: {
		lineThickness: 1
	},
	data: data  // random data
};

var chart = new CanvasJS.Chart("chartContaine1", options);
var startTime = new Date();
chart.render();
var endTime = new Date();
document.getElementById("timeToRender").innerHTML = "Time to Render: " + (endTime - startTime) + "ms";

}

      // function renderChart(dataPointsRes) {
      //   var data = [{
      //     name: "Myrtle Beach",
      //     type: "spline",
      //     yValueFormatString: "#0.## °C",
      //     showInLegend: true,
      //     dataPoints: dataPointsRes
      //   }];
      //   var options = {
      //     animationEnabled: true,
      //     title: {
      //       text: "List of users"
      //     },
      //     axisX: {
      //       valueFormatString: "mm:ss"
      //     },
      //     axisY: {
      //       title: "Temperature (in °C)",
      //       suffix: " °C"
      //     },
      //     legend: {
      //       cursor: "pointer",
      //       fontSize: 16,
      //       itemclick: toggleDataSeries
      //     },
      //     toolTip: {
      //       shared: true
      //     },
      //     data: data
      //   };
      //   var chart = new CanvasJS.Chart("chartContainer", options);
      //   chart.render();
      // }

      // function toggleDataSeries(e) {
      //   if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
      //     e.dataSeries.visible = false;
      //   } else {
      //     e.dataSeries.visible = true;
      //   }
      //   chart.render();
      // }
      // window.onload = function() {
      //   var dataPointsRes = [{
      //     x: new Date(2018, 11, 24, 10, 33, 30, 0),
      //     y: 31.6
      //   }, {
      //     x: new Date(2018, 11, 24, 10, 34, 30, 0),
      //     y: 10.9
      //   }, {
      //     x: new Date(2018, 11, 24, 10, 35, 30, 0),
      //     y: 29
      //   }, {
      //     x: new Date(2018, 11, 24, 10, 36, 30, 0),
      //     y: 29
      //   }, {
      //     x: new Date(2018, 11, 24, 10, 37, 30, 0),
      //     y: 31
      //   }, {
      //     x: new Date(2018, 11, 24, 10, 38, 30, 0),
      //     y: 30
      //   }, {
      //     x: new Date(2018, 11, 24, 10, 39, 30, 0),
      //     y: 29
      //   }];
      //   renderChart(dataPointsRes);
      // }
    
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js" integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.min.js" integrity="sha384-7VPbUDkoPSGFnVtYi0QogXtr74QeVeeIs99Qfg5YCF+TidwNdjvaKZX19NZ/e6oz" crossorigin="anonymous"></script>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
  </body>
</html>