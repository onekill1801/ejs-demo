<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/head'); %>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
</head>
<body class="container">

  <div class="container text-center" >
    <div id="chartContainer" style="height: 370px; width: 100%;"></div>
<div class="row">
<div class="col">
  <%= tagline %>
  </div>
  <div class="col">
    Column
  </div>
  <div class="col">
    Column
  </div>
</div>
<div class="row row-cols-3" style="background-color: green;border: 50px;border-color: black;">
<div class="col-4">Column</div>
<div class="col-8">Column</div>
<div class="col-4">Column</div>
<div class="col-4">Column</div>
<div class="col-4">Column</div>
</div>
<br>
<br>
<br>
<table class="table table-striped table-bordered">
<thead>
  <tr>
    <th scope="col-3">#</th>
    <th scope="col-3">First</th>
    <th scope="col-3">Last</th>
    <th scope="col-3">Handle</th>
  </tr>
</thead>
<tbody>
  <tr>
    <th scope="row">1</th>
    <td>Mark</td>
    <td>Otto</td>
    <td>@mdo</td>
  </tr>
  <tr>
    <th scope="row">2</th>
    <td>Jacob</td>
    <td>Thornton</td>
    <td>@fat</td>
  </tr>
  <tr>
    <th scope="row">3</th>
    <td colspan="2">Larry the Bird</td>
    <td>
        <div class="form-check form-switch form-check-reverse">
            <input class="form-check-input" type="checkbox" value="" id="reverseCheck1">
            <label class="form-check-label" for="reverseCheck1">
              Reverse checkbox
            </label>
          </div>
    </td>
  </tr>
</tbody>
</table>
<div class="form-check form-switch" style="width: 300px">
<label class="form-check-label" for="flexSwitchCheckDefault">Default switch checkbox input</label>
<input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
</div>
<div class="form-check form-switch">
<input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked>
<label class="form-check-label" for="flexSwitchCheckChecked">Checked switch checkbox input</label>
</div>
<div class="form-check form-switch">
<input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDisabled" disabled>
<label class="form-check-label" for="flexSwitchCheckDisabled">Disabled switch checkbox input</label>
</div>
<div class="form-check form-switch">
<input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckCheckedDisabled" checked disabled>
<label class="form-check-label" for="flexSwitchCheckCheckedDisabled">Disabled checked switch checkbox input</label>
</div>
<div class="form-check form-check-reverse">
<input class="form-check-input" type="checkbox" value="" id="reverseCheck1">
<label class="form-check-label" for="reverseCheck1">
  Reverse checkbox
</label>
</div>
<div class="form-check form-check-reverse">
<input class="form-check-input" type="checkbox" value="" id="reverseCheck2" disabled>
<label class="form-check-label" for="reverseCheck2">
  Disabled reverse checkbox
</label>
</div>

<div class="form-check form-switch form-check-reverse">
<input class="form-check-input" type="checkbox" id="flexSwitchCheckReverse">
<label class="form-check-label" for="flexSwitchCheckReverse">Reverse switch checkbox input</label>
</div>

<div class="form-check form-check-inline">
<input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="option1">
<label class="form-check-label" for="inlineCheckbox1">1</label>
</div>
<div class="form-check form-check-inline">
<input class="form-check-input" type="checkbox" id="inlineCheckbox2" value="option2">
<label class="form-check-label" for="inlineCheckbox2">2</label>
</div>
<div class="form-check form-check-inline">
<input class="form-check-input" type="checkbox" id="inlineCheckbox3" value="option3" disabled>
<label class="form-check-label" for="inlineCheckbox3">3 (disabled)</label>
</div>
<div style="width: 200px"> 
<label for="customRange1" class="form-label">Example range</label>
<input type="range" class="form-range" id="customRange1">
</div>
</div>
<header>
  <%- include('../partials/header'); %>
</header>

<main>
  <div class="jumbotron">
    <h1>This is great</h1>
    <p>Welcome to templating using EJS</p>

    <h2>Variable</h2>
    <p><%= tagline %></p>

    <ul>
      <% mascots.forEach(function(mascot) { %>
        <li>
          <strong><%= mascot.name %></strong>
          representing <%= mascot.organization %>,
          born <%= mascot.birth_year %>
        </li>
      <% }); %>
    </ul>
  </div>
</main>

<footer>
  <%- include('../partials/footer'); %>
</footer>
    <script>
      window.onload = function() {
  var dataPointsRes = [{
          x: new Date(2018, 11, 24, 10, 33, 30, 0),
          y: 31.6
      },
      {
          x: new Date(2018, 11, 24, 10, 34, 30, 0),
          y: 10.9
      },
      {
          x: new Date(2018, 11, 24, 10, 35, 30, 0),
          y: 29
      },
      {
          x: new Date(2018, 11, 24, 10, 36, 30, 0),
          y: 29
      },
      {
          x: new Date(2018, 11, 24, 10, 37, 30, 0),
          y: 31
      },
      {
          x: new Date(2018, 11, 24, 10, 38, 30, 0),
          y: 30
      },
      {
          x: new Date(2018, 11, 24, 10, 39, 30, 0),
          y: 29
      }
  ];
  renderChart(dataPointsRes);
}

function renderChart(dataPointsRes) {
  var data = [{
      name: "Myrtle Beach",
      type: "spline",
      yValueFormatString: "#0.## °C",
      showInLegend: true,
      dataPoints: dataPointsRes
  }];


  var options = {
      animationEnabled: true,
      title: {
          text: "List of users"
      },
      axisX: {
          valueFormatString: "mm:ss"
      },
      axisY: {
          title: "Temperature (in °C)",
          suffix: " °C"
      },
      legend: {
          cursor: "pointer",
          fontSize: 16,
          itemclick: toggleDataSeries
      },
      toolTip: {
          shared: true
      },
      data: data
  };

  var chart = new CanvasJS.Chart("chartContainer", options);
  chart.render();
}

function toggleDataSeries(e) {
  if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
      e.dataSeries.visible = false;
  } else {
      e.dataSeries.visible = true;
  }
  chart.render();
}
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js" integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.min.js" integrity="sha384-7VPbUDkoPSGFnVtYi0QogXtr74QeVeeIs99Qfg5YCF+TidwNdjvaKZX19NZ/e6oz" crossorigin="anonymous"></script>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</body>
</html>